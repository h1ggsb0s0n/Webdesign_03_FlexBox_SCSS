
/////////////////////////////
//logo
.logo {
  height: 3.25rem;
  margin-left: 2rem;

}


/////////////////////////////
//SEARCH
.search{
  //background-color: orangered; // only for purpose of box adjustments
  flex: 0 0 40%;//0 > dont' grow to fill space 0-> don't shrink
  display:flex; //Nested FLEX BOX-> ITEM Becomes container -> prevents the icon vertically as well as horizontally when focused
  align-items:center;
  justify-content: center;


  &__input{
    font-family: inherit; //input does not automatically inherit
    font-size: inherit; //from .header -> see _layout.scss
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;
    margin-right: -3.25rem; //shoves the logo into the Searchbar

    &:focus{
      outline: none;
      width: 100%;//goes to 40% of the parent element
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder{
      font-weight: 100;
      color: var(--color-grey-light-4);
    }

  }

  &__input:focs + &__button{
    background-color: var(--color-grey-light-3);
  }

  &__button{
    border:none;
    background-color: var(--color-grey-light-2);
    &:focus{
      outline: none;//around the border to make the element stand out
    }

    &:active{
      transform: translateY(2px);
    }
  }

  &__icon{

    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);//property of the svg - icon
  }


}


/////////////////////////////
//USER NAVIGATION
.user-nav{
  //background-color: greenyellow;
  display: flex;//flex item is flex container
  align-items: center;
  align-self: stretch;

  & > * {//select all direct children
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;//now the whole area is now selected
    display:flex; // all children are now flex containers
    align-items: center; //is needed because of the height of 100% in &>* -> it aligns the items to the top
  }

  & > *:hover{
    background-color: var(--color-grey-light-2);
  }


  &__icon-box{
    position: relative;
  }

  &__icon{
      height: 2.25rem;
      width: 2.25rem;
      fill: var(--color-grey-dark-2);


  }

  &__notification{
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius:50%;
    background-color:var(--color-primary);
    color: #fff;
    //for perfect positioning flexbox is not
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    //flexbox works with text as well
    display: flex;
    justify-content: center;
    align-items: center;
  }


  &__user-photo{
    height:3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }


}


/////////////////////////////
//USER NAVIGATION

.side-nav{
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item{
    position: relative;

    &:not(:last-child){
      margin-bottom: .5rem;//used to distinguish the v
    }
  }

  &__item:before{
    content: "";//does not show in the browser without it
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0); //scale only occurs in the y direction. needs to be set towork with the __item:hover::before -> transofrm
    transition: transform .2s,
                          width .4s cubic-bezier(1,0,0,1) .2s, //last .2s -> second animation starts after 2s
                          background-color .1s;//for click/active pseudo class transition

    //transform-origin: bottom; // now starts transforming on the bottom (default is in the middle)

  }

  &__item:hover::before,
  &__item--active::before{//the first item is already selected
    transform: scaleY(1);
    width: 100%;
  }

  //// TODO: Is that better?
  &__item:hover{
    &::before{

    }
  }

  &__item:active::before{
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited{
    color:var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    position: relative; //for the z-index to work
    z-index: 10; //z-index only works if we have to specify the position -> that's why relative
    display: flex;
    align-items: center;//vertically aligned because of the
  }

  /*&__link:hover{
    color: orangered; // now the icon is also colored orangered (currentColor)
  }*/



  &__icon {
    //color: blue; // now the icon is the color blue, not of the parent (currentColor)
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; //color of the parent or current Element well supported by a lot of browsers
  }
}

.legal{
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

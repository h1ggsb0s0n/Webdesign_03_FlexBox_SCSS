
/////////////////////////////
//logo
.logo {
  height: 3.25rem;
  margin-left: 2rem;

}


/////////////////////////////
//SEARCH
.search{
  //background-color: orangered; // only for purpose of box adjustments
  flex: 0 0 40%;//0 > dont' grow to fill space 0-> don't shrink
  display:flex; //Nested FLEX BOX-> ITEM Becomes container -> prevents the icon vertically as well as horizontally when focused
  align-items:center;
  justify-content: center;


  &__input{
    font-family: inherit; //input does not automatically inherit
    font-size: inherit; //from .header -> see _layout.scss
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;
    margin-right: -3.25rem; //shoves the logo into the Searchbar

// TODO: outlines should never be set to none, style outlines to liking
    &:focus{
      outline: none;
      width: 100%;//goes to 40% of the parent element
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder{
      font-weight: 100;
      color: var(--color-grey-light-4);
    }

  }

  &__input:focs + &__button{
    background-color: var(--color-grey-light-3);
  }

  &__button{
    border:none;
    background-color: var(--color-grey-light-2);
    &:focus{
      outline: none;//around the border to make the element stand out
    }

    &:active{
      transform: translateY(2px);
    }
  }

  &__icon{

    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);//property of the svg - icon
  }


}


/////////////////////////////
//USER NAVIGATION
.user-nav{
  //background-color: greenyellow;
  display: flex;//flex item is flex container
  align-items: center;
  align-self: stretch;

  & > * {//select all direct children
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;//now the whole area is now selected
    display:flex; // all children are now flex containers
    align-items: center; //is needed because of the height of 100% in &>* -> it aligns the items to the top
  }

  & > *:hover{
    background-color: var(--color-grey-light-2);
  }


  &__icon-box{
    position: relative;
  }

  &__icon{
      height: 2.25rem;
      width: 2.25rem;
      fill: var(--color-grey-dark-2);


  }

  &__notification{
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius:50%;
    background-color:var(--color-primary);
    color: #fff;
    //for perfect positioning flexbox is not
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    //flexbox works with text as well
    display: flex;
    justify-content: center;
    align-items: center;
  }


  &__user-photo{
    height:3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }


}


/////////////////////////////
//USER NAVIGATION

.side-nav{
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item{
    position: relative;

    &:not(:last-child){
      margin-bottom: .5rem;//used to distinguish the v
    }
  }

  &__item:before{
    content: "";//does not show in the browser without it
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0); //scale only occurs in the y direction. needs to be set towork with the __item:hover::before -> transofrm
    transition: transform .2s,
                          width .4s cubic-bezier(1,0,0,1) .2s, //last .2s -> second animation starts after 2s
                          background-color .1s;//for click/active pseudo class transition

    //transform-origin: bottom; // now starts transforming on the bottom (default is in the middle)

  }

  &__item:hover::before,
  &__item--active::before{//the first item is already selected
    transform: scaleY(1);
    width: 100%;
  }

  //// TODO: Is that better?
  &__item:hover{
    &::before{

    }
  }

  &__item:active::before{
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited{
    color:var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    position: relative; //for the z-index to work
    z-index: 10; //z-index only works if we have to specify the position -> that's why relative
    display: flex;
    align-items: center;//vertically aligned because of the
  }

  /*&__link:hover{
    color: orangered; // now the icon is also colored orangered (currentColor)
  }*/



  &__icon {
    //color: blue; // now the icon is the color blue, not of the parent (currentColor)
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; //color of the parent or current Element well supported by a lot of browsers
  }
}

.legal{
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

///////////////////////////////////
//gallery
.gallery{
  display: flex;
  &__photo{
    width: 100%;
    display: block;//image should always to be block or inline block -> avoid small space underneath an imege when left as inline element -> see flex 1

  }
}
///////////////////////////////////
//Hotel
.overview{
  display: flex;
  align-items: center;
  //justify-content: space-between; does not work because space between is not ditributed evenly

  border-bottom: var(--line);

  &__heading{
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem;


  }

  &__stars{
    margin-right: auto; //solution for the problem with  available space -> everything on the right is automatically calculated
    //flex: 1; //occupies all the available space - not ideal see background color (larger than stars)-> should be only the size of the content (hovereffect on element would occur on all)
    //background-color: orangered;
    display: flex;//svg items behave like inline elements -> so they are not aligned centered (.overview selector)

  }

  &__icon-star,
  &__icon-location{
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location{
    font-size: 1.2rem;
    display: flex;
    vertical-align: center;
  }

  &__icon-location{
    margin-right: .5rem;
  }

  &__rating{
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;
    align-self: stretch; //occupies all the space it has -> overwrite inheritance from above .overview -> align-items center;

    //used for centering vertically and horizontally:
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  &__rating-average{
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom:  -3px;
  }

  &__rating-count{
    font-size: .8rem;
    text-transform: uppercase;
  }
}

///////////////////////////////////
//Button Inline

.btn-inline{
  border: none;
  color: var(--color-primary);
  font-size: inherit; //Modularity/Reusability Inherits from its parent elements
  border-bottom: 1px solid currentColor; //same color as text, hover effect: currentColor does not need to be added as well
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all .2s;

  &:hover{
    color: var(--color-grey-dark-1);
    //border-bottom: 1px solid var(--color-grey-dark-1); not needed because of current color
  }

  &:focus{
    outline: none;
    animation: pulsate 1s infinite;
  }

}

@keyframes pulsate{
  0%{
    transform: scale(1);
    box-shadow: none;
  }

  50%{
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0,0,0, .25);
  }

  100%{
    transform: scale(1);
    box-shadow: none;
  }
}


///////////////////////////////////
//Paragraph

.paragraph:not(:last-of-type){//last-of-type only applies of the same type (lasat-child -> all children)
  margin-bottom: 2rem;
}

///////////////////////////////////
//list

.list{
  list-style: none;
  margin: 3rem 0;
  padding: 3rem;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  flex-wrap: wrap;

  &__item{
    flex: 0 0 50%; // two elements side by side -> 50% of flex container
    margin-bottom: .7rem;
  }

  &__item::before{
    content: "";//needed
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: .7rem;

    //Older browsers
    //background-image: url(../img/chevron-thin-right.svg);//color cannot be altered with background image
    //background-size:cover;

    //Newer browser = masks -> can be seen through
    background-color: var(--color-primary);
    -webkit-mask-image: url(../img/chevron-thin-right.svg);
    -webkit-mask-size: cover;

  }
}



///////////////////////////////////
//Recommend

.recommend{
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;


  &__count{
    margin-right: auto;
  }

  &__friends{

  }


  &__photo{
    box-sizing: content-box;//border does add to the element (boxsizeing: border box inherited) (4rem)-> the image gets smaller
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child){
      margin-right: -1.5rem;
    }
  }
}
